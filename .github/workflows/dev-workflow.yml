name: Dev Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main  # Adjust as needed

jobs:
  build-and-deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        run: |
          echo "Building docker image"
          # docker build -t my-app:latest .
          # docker tag my-app:latest my-docker-registry/my-app:latest
          # echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin my-docker-registry
          # docker push my-docker-registry/my-app:latest

      - name: Deploy to Dev Environment
        run: |
          echo "Deploying to Dev Environment"
          # Add your deployment script/command here

      - name: Trigger Manual Approval for Stage and Prod
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            const pullRequestTitle = pullRequest.title;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Dev deployment complete for PR: ${pullRequestTitle}. Please proceed with stage and prod deployments using the workflow dispatch event.`,
            });

            // Trigger the Stage and Prod Workflow
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow: 'stage-prod-workflow.yml',
              ref: context.ref,
            });
