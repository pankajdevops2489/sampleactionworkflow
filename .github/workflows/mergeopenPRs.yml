name: Cherry-Pick Open PRs to Release Branch2new

on: 
  workflow_dispatch: # Trigger manually from the GitHub Actions tab 
    inputs: 
      target_branch: 
        description: 'Target branch to cherry-pick into' 
        required: true 
        default: 'release' 
        type: string 

jobs: 
  cherry-pick: 
    runs-on: ubuntu-latest 

    steps: 
      # Step 1: Checkout the repository with full history 
      - name: Checkout code 
        uses: actions/checkout@v3 
        with: 
          fetch-depth: 0 # Fetch all commits for cherry-picking 

      # Step 2: Set up Git configuration 
      - name: Configure Git 
        run: | 
          git config --global user.name "github-actions[bot]" 
          git config --global user.email "github-actions[bot]@users.noreply.github.com" 

      # Step 3: Fetch open PRs targeting the specified branch 
      - name: Fetch Open PRs 
        id: pr_list 
        run: | 
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}" 
          target_branch="${{ github.event.inputs.target_branch }}" 
          prs=$(gh pr list --base $target_branch --state open --json number,headRefName --jq '.[].number') 
          
          if [ -z "$prs" ]; then 
            echo "No open PRs found targeting branch $target_branch." 
            exit 0 
          fi 
          echo "OPEN_PRS=$prs" >> $GITHUB_ENV 
          
      # Step 4: Cherry-pick commits from each open PR 
      - name: Cherry-Pick Commits 
        if: env.OPEN_PRS != '' 
        run: | 
          for pr_number in $OPEN_PRS; do 
            echo "Processing PR #$pr_number" 
            
            # Get the commit hash of the first commit in the PR 
            commit_hash=$(gh pr view $pr_number --json commits -q '.commits[0].oid') 
            
            # Switch to the target branch 
            git checkout ${{ github.event.inputs.target_branch }} 
            git pull origin ${{ github.event.inputs.target_branch }} 
            
            # Cherry-pick the commit 
            if ! git cherry-pick $commit_hash; then 
              echo "Cherry-pick failed for commit $commit_hash, aborting." 
              git cherry-pick --abort 
              exit 1 
            fi 
          done 
        
  deploy_to_stage:
    runs-on: ubuntu-latest
    needs: cherry-pick
    steps:
      - name: Deploy to Stage Environment
        run: |
          echo "Deploying to Stage Environment"
